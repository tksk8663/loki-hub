import { getHead } from "../../common-head.ts";
import { getHeader } from "../../header.ts";
import { marked } from "npm:marked";

export function newProject(): Response {
  const markedText = `# SNSサービス 要件定義書

## 1. サービス概要
- 顔認証＋マイナンバー等の本人確認を活用した、誹謗中傷抑制に特化したSNS
- 表現の自由を尊重しつつ、安心・安全に利用できる環境を提供
- SNS依存を軽減する設計で、ユーザーのメンタルヘルスを配慮

## 2. 主な機能要件

### 2-1. 認証・本人確認
- 登録時に顔認証＋マイナンバー等で本人確認を実施
- 以降のログインはスマホの生体認証など簡易認証で対応可能
- 複数アカウント運用可（2〜3アカウント程度）、本人特定は可能

### 2-2. 投稿管理
- 投稿内容のAIによる監視（誹謗中傷、センシティブ表現の検出）
- 「〇ね」など隠語や誤字・伏字にも対応できるAI精度向上を目指す
- Bad評価による自動判定と、必要時運営への通報システム併用
- 投稿者本人が通報理由を添えて通報可能（通報者全員にしないことで誤報防止）
- AIが「プレッシャーをかける投稿（例：『何で見てないんだ！』）」を検出し、注意メッセージを表示

### 2-3. チーム・グループ機能
- 期間限定のチーム作成が可能（誕生日記念やイベントなど）
- チーム参加者はサブスク登録などで応援可能
- 企業や企画団体のみの作成許可によるスポーツチーム等の管理

### 2-4. 課金・収益モデル
- サブスクリプションによる複数アカウント解放（例：2アカウント目以降有料）
- チーム応援サブスクやまとめ割引（例：複数チャンネル登録割引）
- 配信者やチームへ収益配分機能
- 広告は極力排除し、ユーザー体験重視

### 2-5. 運営・管理
- 規約違反投稿に対して運営が対処し、定期的に対応件数を報告（匿名統計）
- 投稿やユーザーデータは開示請求対応のため一定期間別DBで保管、物理的隔離推奨
- 運営への通報は投稿者本人が理由を添えて可能

### 2-6. UI/UX設計
- リアルタイム通知は必要最低限に制限し、依存症軽減を目的とした設計
- 投稿や返信に即時性を強制せず、ゆったり利用可能
- AIによる注意メッセージでユーザー同士のストレス軽減

## 3. 非機能要件
- ハイブリッドアプリ（WebView）＋Webサイトの両対応を想定
- セキュリティ強化（個人情報・認証情報の保護）
- 高い可用性とスケーラビリティ
- 運営者・管理者向けの管理画面を用意

## 4. 今後の検討課題
- AIの検出精度向上と学習データの整備
- 通報システムの運用フロー設計
- 課金・収益分配の具体的仕組みと透明性確保
- 利用規約やプライバシーポリシーの策定
`;
  const header = getHead("New Project");
  const body = `<!DOCTYPE html>
  <html lang="ja">${header}
    <body>
      ${getHeader()}
      <div style="display: table">
        <div style="display: table-cell;width: auto"></div>
        <div style="display: table-cell; width: 800px">${marked(markedText)}</div>
        <div style="display: table-cell;width: auto"></div>
      </div>
    </body>
  </html>`;
  return new Response(body, {
    status: 200,
    headers: { "Content-Type": "text/html" },
  });
}
